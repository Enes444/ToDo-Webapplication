name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: todos
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          java-package: jdk

      - name: Set execute permission for gradlew
        run: chmod +x gradlew



      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U user; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
        env:
          PGPASSWORD: password

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test --stacktrace --info
        env:
          DB_URL: jdbc:postgresql://localhost:5432/todos
          DB_USERNAME: user
          DB_PASSWORD: password

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/my-springboot-app .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-springboot-app

      - name: Deploy to Render
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST "https://api.render.com/deploy" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
                "serviceId": "YOUR_RENDER_SERVICE_ID",
                "triggerType": "manual"
              }'
